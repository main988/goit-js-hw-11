{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '53021043-6beb26dd5ed38e7bac2943366';\nconst BASE_URL = 'https://pixabay.com/api/';\n\n/**\n * \n * @param {string} query\n * @returns {Promise<object>}\n */\nexport async function getImagesByQuery(query) {\n  const params = {\n    key: API_KEY,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: true,\n  };\n\n  try {\n    const response = await axios.get(BASE_URL, { params });\n    return response.data; \n  } catch (error) {\n\n    console.error('Error fetching images:', error);\n    throw new Error('Failed to fetch images from API');\n  }\n}","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst galleryContainer = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nlet lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nfunction imageTemplate({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) {\n  return `\n    <li class=\"gallery-item\">\n      <a class=\"gallery-link\" href=\"${largeImageURL}\">\n        <img\n          class=\"gallery-image\"\n          src=\"${webformatURL}\"\n          alt=\"${tags}\"\n        />\n      </a>\n      <div class=\"info-block\">\n        <div class=\"info-item\">\n          <p class=\"label\">Likes</p>\n          <p class=\"value\">${likes}</p>\n        </div>\n        <div class=\"info-item\">\n          <p class=\"label\">Views</p>\n          <p class=\"value\">${views}</p>\n        </div>\n        <div class=\"info-item\">\n          <p class=\"label\">Comments</p>\n          <p class=\"value\">${comments}</p>\n        </div>\n        <div class=\"info-item\">\n          <p class=\"label\">Downloads</p>\n          <p class=\"value\">${downloads}</p>\n        </div>\n      </div>\n    </li>\n  `;\n}\n\nexport function createGallery(images) {\n  const markup = images.map(imageTemplate).join('');\n  galleryContainer.insertAdjacentHTML('beforeend', markup);\n  lightbox.refresh(); \n}\n\nexport function clearGallery() {\n  galleryContainer.innerHTML = '';\n}\n\nexport function showLoader() {\n  if (loader) {\n    loader.classList.remove('is-hidden');\n  }\n}\n\nexport function hideLoader() {\n  if (loader) {\n    loader.classList.add('is-hidden');\n  }\n}","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport { getImagesByQuery } from './js/pixabay-api';\nimport { clearGallery, createGallery, showLoader, hideLoader } from './js/render-functions';\n\nconst searchForm = document.querySelector('.form');\n\nconst toastOptions = {\n  title: 'Error',\n  message: 'Sorry, there are no images matching your search query. Please try again!',\n  backgroundColor: '#EF4040',\n  messageColor: '#FFFFFF',\n  position: 'topRight',\n};\n\nsearchForm.addEventListener('submit', onSearch);\n\nasync function onSearch(event) {\n  event.preventDefault();\n\n  const query = event.currentTarget.elements['search-text'].value.trim();\n\n  if (!query) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Search field cannot be empty!',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  clearGallery();\n  showLoader();\n\n  try {\n\n    const data = await getImagesByQuery(query);\n    const images = data.hits;\n\n    if (images.length === 0) {\n      iziToast.error(toastOptions);\n      return;\n    }\n\n    createGallery(images);\n  } catch (error) {\n    console.error(error);\n    iziToast.error({\n      title: 'Error',\n      message: 'Something went wrong while fetching images.',\n      position: 'topRight',\n    });\n  } finally {\n    hideLoader();\n    searchForm.reset();\n  }\n}"],"names":["API_KEY","BASE_URL","getImagesByQuery","query","params","axios","error","galleryContainer","loader","lightbox","SimpleLightbox","imageTemplate","webformatURL","largeImageURL","tags","likes","views","comments","downloads","createGallery","images","markup","clearGallery","showLoader","hideLoader","searchForm","toastOptions","onSearch","event","iziToast"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAOV,eAAeC,EAAiBC,EAAO,CAC5C,MAAMC,EAAS,CACb,IAAKJ,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EAChB,EAEE,GAAI,CAEF,OADiB,MAAME,EAAM,IAAIJ,EAAU,CAAE,OAAAG,CAAM,CAAE,GACrC,IACjB,OAAQE,EAAO,CAEd,cAAQ,MAAM,yBAA0BA,CAAK,EACvC,IAAI,MAAM,iCAAiC,CAClD,CACH,CCxBA,MAAMC,EAAmB,SAAS,cAAc,UAAU,EACpDC,EAAS,SAAS,cAAc,SAAS,EAE/C,IAAIC,EAAW,IAAIC,EAAe,aAAc,CAC9C,aAAc,MACd,aAAc,GAChB,CAAC,EAED,SAASC,EAAc,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,GAAa,CAC/F,MAAO;AAAA;AAAA,sCAE6BL,CAAa;AAAA;AAAA;AAAA,iBAGlCD,CAAY;AAAA,iBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAMQC,CAAK;AAAA;AAAA;AAAA;AAAA,6BAILC,CAAK;AAAA;AAAA;AAAA;AAAA,6BAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,6BAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,GAKtC,CAEO,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAASD,EAAO,IAAIT,CAAa,EAAE,KAAK,EAAE,EAChDJ,EAAiB,mBAAmB,YAAac,CAAM,EACvDZ,EAAS,QAAO,CAClB,CAEO,SAASa,GAAe,CAC7Bf,EAAiB,UAAY,EAC/B,CAEO,SAASgB,GAAa,CACvBf,GACFA,EAAO,UAAU,OAAO,WAAW,CAEvC,CAEO,SAASgB,GAAa,CACvBhB,GACFA,EAAO,UAAU,IAAI,WAAW,CAEpC,CCzDA,MAAMiB,EAAa,SAAS,cAAc,OAAO,EAE3CC,EAAe,CACnB,MAAO,QACP,QAAS,2EACT,gBAAiB,UACjB,aAAc,UACd,SAAU,UACZ,EAEAD,EAAW,iBAAiB,SAAUE,CAAQ,EAE9C,eAAeA,EAASC,EAAO,CAC7BA,EAAM,eAAc,EAEpB,MAAMzB,EAAQyB,EAAM,cAAc,SAAS,aAAa,EAAE,MAAM,OAEhE,GAAI,CAACzB,EAAO,CACV0B,EAAS,MAAM,CACb,MAAO,QACP,QAAS,gCACT,SAAU,UAChB,CAAK,EACD,MACD,CAEDP,IACAC,IAEA,GAAI,CAGF,MAAMH,GADO,MAAMlB,EAAiBC,CAAK,GACrB,KAEpB,GAAIiB,EAAO,SAAW,EAAG,CACvBS,EAAS,MAAMH,CAAY,EAC3B,MACD,CAEDP,EAAcC,CAAM,CACrB,OAAQd,EAAO,CACd,QAAQ,MAAMA,CAAK,EACnBuB,EAAS,MAAM,CACb,MAAO,QACP,QAAS,8CACT,SAAU,UAChB,CAAK,CACL,QAAY,CACRL,IACAC,EAAW,MAAK,CACjB,CACH"}